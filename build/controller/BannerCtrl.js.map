{"version":3,"sources":["controller/BannerCtrl.ts"],"names":[],"mappings":";;;;;;;;;AAAA,kDAAkD;AAClD,MAAO,UAAU,WAAW,yBAAyB,CAAC,CAAC;AACvD,MAAO,YAAY,WAAW,2BAA2B,CAAC,CAAC;AAE3D;;;GAGG;AAEH;;;;;GAKG;AACQ,mBAAW,GAAG,UAAe,IAAW,EAAC,IAAW;;QAC3D,IAAI,GAAG,GAAG,iDAAiD,GAAC,IAAI,GAAC,GAAG,CAAC;QACrE,IAAG,CAAC;YACA,IAAI,SAAS,GAAG,MAAM,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC9C,MAAM,CAAC,IAAI,OAAO,CAAa,CAAC,OAAgC,EAAC,MAAwB;gBACrF,EAAE,CAAA,CAAC,SAAS,CAAC,MAAM,IAAE,SAAS,CAAC,MAAM,GAAC,CAAC,CAAC,CAAA,CAAC;oBACrC,GAAG,CAAA,CAAC,IAAI,KAAK,IAAI,SAAS,CAAC,CAAA,CAAC;wBACxB,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,GAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;oBACvD,CAAC;gBACL,CAAC;gBACD,OAAO,CAAC,UAAU,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC;YACvD,CAAC,CAAC,CAAA;QACN,CAAC;QAAA,KAAK,CAAA,CAAC,GAAG,CAAC,CAAA,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,CAAC,IAAI,OAAO,CAAa,CAAC,OAAgC,EAAC,MAAwB;gBACrF,MAAM,CAAC,GAAG,CAAC,CAAC;YAChB,CAAC,CAAC,CAAA;QACN,CAAC;IACL,CAAC;CAAA,CAAA","file":"controller/BannerCtrl.js","sourcesContent":["/// <reference path=\"./../../typings/index.d.ts\"/>\nimport HttpResult = require(\"./../modules/HttpResult\");\nimport MysqlConnect = require(\"./../modules/MysqlConnect\");\n\n/**\n * banner图相关的模块\n * @module\n */\n\n/**\n * 查询banner图\n * @param {string} type - banner图的类型\n * @param {string} host - 图片url添加host，修改成绝对路径\n * @returns {HttpResult|any} 查询得到的结果，异常时返回error异常信息 \n */\nexport let queryBanner = async function(type:string,host:string):Promise<HttpResult>{\n    let sql = \"select path from tb_image_banner where type = '\"+type+\"'\";\n    try{\n        let sqlResult = await MysqlConnect.query(sql);\n        return new Promise<HttpResult>((resolve:(value:HttpResult)=>void,reject:(value:any)=>void)=>{\n            if(sqlResult.length&&sqlResult.length>0){\n                for(let index in sqlResult){\n                    sqlResult[index].path = host+sqlResult[index].path;\n                }\n            }\n            resolve(HttpResult.CreateSuccessResult(sqlResult));\n        })\n    }catch(err){\n        console.log(err);\n        return new Promise<HttpResult>((resolve:(value:HttpResult)=>void,reject:(value:any)=>void)=>{\n            reject(err);\n        })\n    }\n}"],"sourceRoot":"../src"}