{"version":3,"sources":["controller/ProductCtrl.ts"],"names":[],"mappings":"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","file":"controller/ProductCtrl.js","sourcesContent":["import NodeData = require(\"NodeData\");\nimport HttpResult = require(\"./../modules/HttpResult\");\nimport MysqlConnect = require(\"./../modules/MysqlConnect\");\nimport Tool = require(\"./../modules/Tool\");\n/**\n * 项目相关模块\n * ProductCtrl\n */\nclass ProductCtrl {\n    private queryParams:NodeData.IQueryParams;\n    constructor(queryParams?:NodeData.IQueryParams) {\n        if(queryParams===null||queryParams===undefined){\n            this.queryParams = {\n                city:\"深圳\",\n                area:null,\n                professionId:null,\n                itemId:null,\n                order:null,\n                currentPage:1,\n                pageRows:10,\n                location:null\n            }\n        }else{\n            this.queryParams = queryParams;\n        }\n    }\n\n    /**\n     * 查询主页热门项目\n     * @params currentPage->分页的当前页数\n     */\n    async queryRecommend(currentPage:number):Promise<HttpResult>{\n        this.queryParams.currentPage = currentPage;\n        let sql = \"select p.id,p.title,p.stand_price as standPrice,p.prefer_price as preferPrice,p.pricetype,p.priceunit,p.sales,p.samllimg,p.profession_id,p.hospital_id,h.name as hospitalname \"+\n                    \"from product as p left join hospital as h on p.hospital_id = h.id where p.id in (select product_id from product_ext where param_name = 'recommend') \"+\n                    \"limit \"+(this.queryParams.currentPage-1)*this.queryParams.pageRows+\",\"+this.queryParams.currentPage*this.queryParams.pageRows;\n        try{\n            let queryResult = await MysqlConnect.query(sql);\n            return new Promise<HttpResult>((resolve:(value:HttpResult)=>void)=>{\n                resolve(HttpResult.CreateResult(queryResult,0,\"success\"));\n            })\n        }catch(err){\n            return new Promise<any>((resolve:(value:HttpResult)=>void,reject:(value:any)=>void)=>{\n                reject(err);\n            })\n        }\n    }\n\n    /**\n     * 查询项目页面的项目信息\n     * @params params->request.body\n     */\n    async queryList(params:any){\n        Tool.initObject(params,this.queryParams);\n        let queryResult:any;\n        let hasWhere = false;\n        let sql = \"select p.id,p.title,p.stand_price as standPrice,p.prefer_price as preferPrice,p.pricetype,p.priceunit,p.sales,p.samllimg,p.profession_id as professionId,p.hospital_id as hospitalId,h.name as hospitalname \"+\n                    \"from product as p left join hospital as h on p.hospital_id = h.id \";\n        if(this.queryParams.area){\n            !hasWhere?sql+=\"where \":\"\";\n            hasWhere?sql+=\" and \":\"\";\n            hasWhere = true;\n            sql += \"h.area = '\"+this.queryParams.area+\"' \";\n        }\n        if(this.queryParams.city){\n            !hasWhere?sql+=\"where \":\"\";\n            hasWhere?sql+=\" and \":\"\";\n            hasWhere = true;\n            sql += \"h.city = '\"+this.queryParams.city+\"' \";\n        }\n        if(this.queryParams.professionId){\n            !hasWhere?sql+=\"where \":\"\";\n            hasWhere?sql+=\" and \":\"\";\n            hasWhere = true;\n            sql += \"p.type = \"+this.queryParams.professionId+\" \";\n        }\n        if(this.queryParams.itemId){\n            !hasWhere?sql+=\"where \":\"\";\n            hasWhere?sql+=\" and \":\"\";\n            hasWhere = true;\n            sql += \"p.profession_id = \"+this.queryParams.itemId+\" \";\n        }\n        if(this.queryParams.order){\n            if(this.queryParams.order===\"prefer_price asc\"){\n                sql += \"order by p.prefer_price asc \";\n            }\n            if(this.queryParams.order===\"prefer_price desc\"){\n                sql += \"order by p.prefer_price desc \";\n            }\n            if(this.queryParams.order===\"hospital_score asc \"){\n                sql += \"order by h.score desc \";\n            }\n            if(this.queryParams.order===\"sales desc\"){\n                sql += \"order by p.sales desc \";\n            }\n        }\n        sql += \"limit \"+(this.queryParams.currentPage-1)*this.queryParams.pageRows+\",\"+this.queryParams.currentPage*this.queryParams.pageRows;\n        try{\n            queryResult = await MysqlConnect.query(sql);\n            // 为了兼容之前java后台数据格式，需对数据进行改动\n            for(let item of queryResult){\n                item.hospital = {\n                    \"name\":item.hospitalname,\n                }\n            }\n            if(queryResult.hospitalname){\n                queryResult\n            }\n            return new Promise<HttpResult>((resolve:(value:HttpResult)=>void)=>{\n                resolve(queryResult);\n            })\n        }catch(err){\n            return new Promise<any>((resolve:(value:HttpResult)=>void,reject:(value:any)=>void)=>{\n                reject(err);\n            })\n        }\n    }\n\n    /**\n     * 查询项目详情页面的\n     */\n    async querybyid(params:any){\n        let productId:number = params.productId||null;\n        let accessToken:string = params.accessToken||null;\n        let focusSql:string = null;\n        let productSql = \"select p.id,p.title,p.introduction,p.hospital_id as hospitalId,p.pricetype,p.priceunit,p.samllimg,p.sales,p.stand_price as standPrice,p.prefer_price as preferPrice,p.samllimg,\"+\n                \"(select count(*) from focus where flag = 3 and focusId = '\"+productId+\"' and fansId in (select user_id from user_token where access_token = '\"+accessToken+\"')) as focusCount from product as p where id = '\"+productId+\"'\";\n        try{\n            let productResult = await MysqlConnect.query(productSql);\n            return new Promise<HttpResult>((resolve:(value:HttpResult)=>void)=>{\n                resolve(HttpResult.CreateSuccessResult(productResult[0]));\n            })\n        }catch(err){\n            return new Promise<HttpResult>((resolve:(value:HttpResult)=>void,reject:(value:any)=>void)=>{\n                reject(err);\n            })\n        }\n    }\n}\n\nexport = ProductCtrl;"],"sourceRoot":"../src"}