{"version":3,"sources":["controller/mycountCtrl.ts"],"names":[],"mappings":";;;;;;;;;AAAA,kDAAkD;AAClD,MAAO,UAAU,WAAW,yBAAyB,CAAC,CAAC;AACvD,MAAO,YAAY,WAAW,2BAA2B,CAAC,CAAC;AAC3D,MAAO,IAAI,WAAW,mBAAmB,CAAC,CAAC;AAE3C;;;GAGG;AAEH;;;;GAIG;AACH,wBAAqC,MAAU;;QAC3C,IAAI,MAAiB,CAAC;QACtB,IAAI,SAAa,CAAC;QAClB,IAAI,GAAG,GAAG,uFAAuF,GAAC,MAAM,CAAC,WAAW,GAAC,IAAI,CAAC;QAC1H,IAAG,CAAC;YACA,SAAS,GAAG,MAAM,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC1C,MAAM,CAAC,IAAI,OAAO,CAAa,CAAC,OAAgC,EAAC,MAA+B;gBAC5F,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,EAAC,UAAU,EAAC,OAAO,EAAC,MAAM,EAAC,KAAK,EAAC,UAAU,EAAC,OAAO,EAAC,WAAW,EAAC,QAAQ,EAAC,OAAO,EAAC,cAAc,CAAC,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzJ,YAAY,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC;gBACjD,MAAM,GAAG,UAAU,CAAC,YAAY,CAAC,YAAY,EAAC,CAAC,EAAC,OAAO,CAAC,CAAC;gBACzD,OAAO,CAAC,MAAM,CAAC,CAAC;YACpB,CAAC,CAAC,CAAA;QACN,CAAC;QAAA,KAAK,CAAA,CAAC,GAAG,CAAC,CAAA,CAAC;YACR,MAAM,CAAC,IAAI,OAAO,CAAM,CAAC,OAAyB,EAAC,MAAwB;gBACvE,MAAM,CAAC,GAAG,CAAC,CAAC;YAChB,CAAC,CAAC,CAAA;QACN,CAAC;IACL,CAAC;;AAjBqB,sBAAc,iBAiBnC,CAAA","file":"controller/mycountCtrl.js","sourcesContent":["/// <reference path=\"./../../typings/index.d.ts\"/>\nimport HttpResult = require(\"./../modules/HttpResult\");\nimport MysqlConnect = require(\"./../modules/MysqlConnect\");\nimport Tool = require(\"./../modules/Tool\");\n\n/**\n * 账户相关模块\n * @module\n */\n\n/**\n * 根据用户token获取用户信息\n * @param {any} params - 经过express parser转换的req.body,需要accessToken字段\n * @returns {HttpResult} 返回登录结果,异常时返回error异常对象\n */\nexport async function getUserByToken(params:any):Promise<HttpResult>{\n    let result:HttpResult;\n    let sqlResult:any;\n    let sql = \"select * from user where id in (select user_id from user_token where access_token = '\"+params.accessToken+\"')\";        \n    try{\n        sqlResult = await MysqlConnect.query(sql);\n        return new Promise<HttpResult>((resolve:(value:HttpResult)=>void,reject:(value:HttpResult)=>void)=>{\n            let filterResult = Tool.FilterResult([\"id\",\"nickname\",\"phone\",\"face\",\"sex\",\"realname\",\"email\",\"gift_code\",\"alipay\",\"wxpay\",\"referralCode\"],sqlResult[0]);\n            filterResult[\"accessToken\"] = params.accessToken;\n            result = HttpResult.CreateResult(filterResult,0,\"查询成功!\");\n            resolve(result);\n        })\n    }catch(err){\n        return new Promise<any>((resolve:(value:any)=>void,reject:(vlaue:any)=>void)=>{\n            reject(err);\n        })\n    }\n}"],"sourceRoot":"../src"}