{"version":3,"sources":["routes/proxyPostRoute.ts"],"names":[],"mappings":"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","file":"routes/proxyPostRoute.js","sourcesContent":["import fs = require(\"fs\");\nimport express = require(\"express\");\nimport proxyRequest = require(\"./../modules/ProxyRequest\");\nimport multer = require(\"multer\");\nimport Tool = require(\"./../modules/Tool\");\n\n/**\n * 帖子相关接口\n * @module\n */\nconst router:express.Router = express.Router();\nlet upload = multer({dest:\"temp/upload\"});\nconst url = \"https://www.uokang.com\";\n\nlet params = [{name:\"img1\"},{name:\"img2\"},{name:\"img3\"},{name:\"p1\"},{name:\"p2\"},{name:\"p3\"}];\n/**\n * /wx/post/addPost - 发布帖子\n * @param {blob} img1 - 术前图片一\n * @param {blob} img2 - 术前图片二\n * @param {blob} img3 - 术前图片三\n * @param {blob} p1 - 术后图片一\n * @param {blob} p2 - 术后图片二\n * @param {blob} p3 - 术后图片三\n * @param {string} postName - 帖子标题\n * @param {string} postContent - 帖子内容\n * @param {string} postFlags - 帖子类型,1：看牙,2：求美，3：孕生\n * @param {number} doctorId - 医生id\n * @param {number} productId - 项目id\n * @param {number} hospitalId - 医院id\n * @returns {HttpResult|Error} 查询结果,异常时返回500   \n */ \nasync function proxy(req:express.Request,res:express.Response){\n    if(req.files){\n        let oldPaths:string[] = [];\n        let newPaths:string[] = [];\n        let result:any;\n        for(var pro in req.files){\n            oldPaths.push(req.files[pro][0].path);\n            newPaths.push(req.files[pro][0].path+\".\"+req.files[pro][0].mimetype.split(\"/\")[1]);\n        }\n        try{\n            for(var index in oldPaths){\n                await Tool.renameFile(oldPaths[index],newPaths[index]);\n            }\n        }catch(err){\n            console.log(err);\n            res.status(500).end();\n        }\n        try{\n            let formData:any = {};\n            formData.img1 = fs.createReadStream(newPaths[0]);\n            formData.img2 = fs.createReadStream(newPaths[1]);\n            formData.img3 = fs.createReadStream(newPaths[2]);\n            formData.p1 = fs.createReadStream(newPaths[3]);\n            formData.p2 = fs.createReadStream(newPaths[4]);\n            formData.p3 = fs.createReadStream(newPaths[5]);\n            formData.postName = req.body.postName;\n            formData.postContent = req.body.postContent;\n            formData.postFlags = req.body.postFlags;\n            if(req.body.doctorId){\n                formData.doctorId = req.body.doctorId;\n            }\n            if(req.body.flag){\n                formData.flag = req.body.flag;\n            }\n            if(req.body.productId){\n                formData.productId = req.body.productId;\n            }\n            if(req.body.hospitalId){\n                formData.hospitalId = req.body.hospitalId;\n            }\n            req.body.formData = formData;\n            req.body.isMulter = true;\n            result = await proxyRequest.request(req,url);\n            res.send(result);\n        }catch(err){\n            console.log(err);\n            res.status(500).end();\n        }\n    }else{\n        res.status(400).end();\n    }\n}\nrouter.use(upload.fields(params),proxy);\n\nexport = router;"],"sourceRoot":"../src"}