{"version":3,"sources":["modules/HttpResult.ts"],"names":[],"mappings":"AAAA,mDAAmD;;AAEnD;;;GAGG;AACH;IAgBI;;;;;OAKG;IACH,YAAY,IAAQ,EAAC,IAAW,EAAC,OAAc;QAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAED;;;;;;;OAOG;IACH,OAAO,YAAY,CAAC,IAAQ,EAAC,IAAW,EAAC,OAAc;QACnD,MAAM,CAAC,IAAI,UAAU,CAAC,IAAI,EAAC,IAAI,EAAC,OAAO,CAAC,CAAC;IAC7C,CAAC;IAED;;;;;OAKG;IACF,OAAO,gBAAgB,CAAC,OAAc;QAClC,MAAM,CAAC,IAAI,UAAU,CAAC,EAAE,EAAC,CAAC,EAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAED;;;;;OAKG;IACF,OAAO,mBAAmB,CAAC,GAAO;QAC9B,MAAM,CAAC,IAAI,UAAU,CAAC,GAAG,EAAC,CAAC,EAAC,SAAS,CAAC,CAAC;IAC3C,CAAC;AACP,CAAC;AAED,iBAAS,UAAU,CAAC","file":"modules/HttpResult.js","sourcesContent":["/// <reference path=\"./../../typings/index.d.ts\" />\n\n/**\n * @class\n * @classdesc http请求的响应结果\n */\nclass HttpResult {\n    /**\n     * @member {any} data - 响应的数据主体\n     */\n    data:any;\n    /**\n     * 响应的状态码,0->成功,1->不成功\n     * @member \n     */\n    code:number;\n    /**\n     * 响应的文本消息\n     * @member \n     */\n    message:string;\n\n    /**\n     * 构建HttpResult对象\n     * @param {any} data - 响应的数据\n     * @param {number} code - 响应的状态码,0->成功,1->失败\n     * @param {string} message - 消息文本\n     */\n    constructor(data:any,code:number,message:string) {\n        this.data = data;\n        this.code = code;\n        this.message = message;\n    }\n\n    /**\n     * 创建HttpResult对象\n     * @static\n     * @param {any} data - 数据主体\n     * @param {number} code - 状态码\n     * @Param {string} message - 消息文本\n     * @returns {HttpResult} 创建的HttpResult对象\n     */\n    static CreateResult(data:any,code:number,message:string){\n        return new HttpResult(data,code,message);\n    }\n\n    /**\n     * 创建失败结果的HttpResult对象\n     * @static\n     * @param {string} message - 失败对象的提示文本\n     * @returns {HttpResult} 创建的代表失败的HttpResult对象\n     */\n     static CreateFailResult(message:string){\n         return new HttpResult({},1,message);\n     }\n\n     /**\n      * 创建成功结果的HttpResult对象\n      * @static\n      * @param {any} obj - 数据主体\n      * @returns {HttpResult} 创建的代表成功的HttpResult对象\n      */\n      static CreateSuccessResult(obj:any){\n          return new HttpResult(obj,0,\"success\");\n      }\n}\n\nexport = HttpResult;"],"sourceRoot":"../src"}